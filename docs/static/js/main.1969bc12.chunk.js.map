{"version":3,"sources":["services/Api.js","services/localExport.js","images/Rick_Morty_logo.png","components/CharacterCard.js","components/CharacterList.js","components/Filters.js","components/NotFound.js","components/CharacterDetail.js","components/App.js","index.js"],"names":["FetchData","fetch","then","response","json","data","results","map","character","id","image","name","species","status","origin","episode","length","localExport","getLocal","localSave","localStorage","getItem","JSON","parse","setLocal","value","setItem","stringify","CharacterCard","className","src","this","props","actor","alt","React","Component","CharacterList","characters","seriesResult","index","to","Filters","type","onChange","onFilterChange","filterText","NotFound","CharacterDetail","find","match","params","App","state","result","handleFilterText","bind","resultLocal","ls","setState","ev","target","filterResult","filter","toLowerCase","includes","logo","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1969bc12.chunk.js","sourcesContent":["const FetchData = () => {\n  return fetch(\n    \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\"\n  )\n    .then((response) => response.json())\n    .then((data) => {\n      const result = data.results.map((character) => {\n        return {\n          id: character.id,\n          image: character.image,\n          name: character.name,\n          species: character.species,\n          status: character.status,\n          origin: character.origin.name,\n          episode: character.episode.length,\n        };\n      });\n\n      return result;\n    });\n};\n\nexport default FetchData;\n","const getLocal = () => {\n  const localSave = localStorage.getItem(\"result\");\n\n  return JSON.parse(localSave);\n};\n\nconst setLocal = (value) => {\n  localStorage.setItem(\"result\", JSON.stringify(value));\n};\n\nconst localExport = {\n  getLocal: getLocal,\n  setLocal: setLocal,\n};\n\nexport default localExport;\n","export default __webpack_public_path__ + \"static/media/Rick_Morty_logo.de13d484.png\";","import React from \"react\";\nimport \"../stylesheets/CharacterCard.css\";\n\nclass CharacterCard extends React.Component {\n  render() {\n    return (\n      <div className=\"cardBox\">\n        <div>\n          <img className=\"photo\" src={this.props.actor.image} alt=\"image\" />\n        </div>\n        <div className=\"lasName\">{this.props.actor.name}</div>\n        <div className=\"lastSpecies\">{this.props.actor.species}</div>\n      </div>\n    );\n  }\n}\nexport default CharacterCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CharacterCard from \"./CharacterCard\";\nimport { Link } from \"react-router-dom\";\nimport \"../stylesheets/CharacterList.css\";\n\nclass CharacterList extends React.Component {\n  render() {\n    if (this.props.characters.length === 0) {\n      return <div className=\"noResults\">No results found</div>;\n    }\n\n    return (\n      <div className=\"CardImages\">\n        {this.props.characters.map(function (seriesResult, index) {\n          return (\n            <Link\n              className=\"CardImages\"\n              key={index}\n              to={`/character/${seriesResult.id}`}\n            >\n              <CharacterCard actor={seriesResult} />\n            </Link>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nCharacterList.propTypes = {\n  characters: PropTypes.array,\n};\n\nexport default CharacterList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../stylesheets/Filter.css\";\n\nclass Filters extends React.Component {\n  render() {\n    return (\n      <form>\n        <div className=\"inputTextBox\">\n          <input\n            className=\"inputText\"\n            type=\"text\"\n            onChange={this.props.onFilterChange}\n            value={this.props.filterText}\n          />\n        </div>\n      </form>\n    );\n  }\n}\n\nFilters.propTypes = {\n  onFilterChange: PropTypes.func,\n  filterText: PropTypes.string,\n};\n\nexport default Filters;\n","import React from \"react\";\nimport \"../stylesheets/NotFound.css\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h2 className=\"notFound\">Card not Found</h2>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../stylesheets/CharacterDetail.css\";\nimport NotFound from \"./NotFound\";\nclass CharacterDetail extends React.Component {\n  render() {\n    const character = this.props.characters.find(\n      (character) => `${character.id}` === this.props.match.params.id\n    );\n    if (!character) {\n      return <NotFound />;\n    }\n\n    return (\n      <div>\n        <Link className=\"linkHome\" to=\"/\">\n          â¬… initial Home\n        </Link>\n        <div>\n          <div className=\"containerCard1\">\n            <img\n              className=\"containerImage\"\n              src={character.image}\n              alt=\"images\"\n            />\n\n            <div className=\"description\">\n              <div className=\"lasNameCard\">{character.name}</div>\n              <div>Status:{character.status}</div>\n              <div>Species:{character.species}</div>\n              <div>Origin:{character.origin.name}</div>\n              <div>Episode:{character.episode}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default CharacterDetail;\n","import \"../stylesheets/App.css\";\nimport React from \"react\";\nimport FetchData from \"../services/Api\";\nimport ls from \"../services/localExport\";\nimport logo from \"../images/Rick_Morty_logo.png\";\nimport CharacterList from \"./CharacterList\";\nimport Filters from \"./Filters\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport { Route, Switch } from \"react-router-dom\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: [],\n      filterText: \"\",\n    };\n    this.handleFilterText = this.handleFilterText.bind(this);\n  }\n\n  componentDidMount() {\n    const resultLocal = ls.getLocal();\n    if (resultLocal) {\n      this.setState({ result: resultLocal });\n    } else {\n      FetchData().then((result) => {\n        ls.setLocal(result);\n        this.setState({ result: result });\n      });\n    }\n  }\n\n  handleFilterText(ev) {\n    this.setState({\n      filterText: ev.target.value,\n    });\n  }\n\n  render() {\n    let filterResult = this.state.result.filter((actor) => {\n      return actor.name\n        .toLowerCase()\n        .includes(this.state.filterText.toLowerCase());\n    });\n\n    return (\n      <div>\n        <div className=\"title\">\n          <img src={logo} className=\"images\" alt=\"imagen\" />\n        </div>\n        <Switch>\n          <Route exact path=\"/\">\n            <div className=\"title\"></div>\n            <Filters\n              filterText={this.state.filterText}\n              onFilterChange={this.handleFilterText}\n            />\n            <CharacterList characters={filterResult} />\n          </Route>\n          <Route\n            exact\n            path=\"/character/:id\"\n            render={(props) => (\n              <CharacterDetail {...props} characters={this.state.result} />\n            )}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import App from \"./components/App\";\nimport { HashRouter } from \"react-router-dom\";\nimport React from \"react\"; //importar la librerÃ­a de react\nimport ReactDOM from \"react-dom\"; //importar react-dom para que react genere el html\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
{"version":3,"sources":["services/Api.js","images/Rick_Morty_logo.png","components/CharacterCard.js","components/CharacterList.js","components/Filters.js","components/App.js","index.js"],"names":["FetchData","fetch","then","response","json","data","results","map","result","image","name","species","CharacterCard","className","src","this","props","actor","React","Component","CharacterList","characters","seriesResult","index","Filters","type","onChange","onFilterChange","value","filterText","App","state","handleFilterText","bind","length","setState","ev","target","filterResult","filter","toLowerCase","includes","logo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAkBeA,G,MAlBG,WAChB,OAAOC,MACL,uFAECC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GASL,OAReA,EAAKC,QAAQC,KAAI,SAACC,GAC/B,MAAO,CACLC,MAAOD,EAAOC,MACdC,KAAK,GAAD,OAAKF,EAAOE,MAChBC,QAASH,EAAOG,iBCVX,MAA0B,4C,OCe1BC,E,4JAZb,WACE,OACE,sBAAKC,UAAU,SAAf,UACE,gCACE,qBAAKC,IAAKC,KAAKC,MAAMC,MAAMR,QAAU,OAEvC,oCAAOM,KAAKC,MAAMC,MAAMP,KAAxB,OACA,oCAAOK,KAAKC,MAAMC,MAAMN,kB,GARJO,IAAMC,WCYnBC,E,4JAVb,WACE,OACE,8BACGL,KAAKC,MAAMK,WAAWd,KAAI,SAAUe,EAAcC,GACjD,OAAO,cAAC,EAAD,CAA2BN,MAAOK,GAAdC,Y,GALTL,IAAMC,WCanBK,E,4JAbb,WACE,OACE,+BACE,uBACEX,UAAU,YACVY,KAAK,OACLC,SAAUX,KAAKC,MAAMW,eACrBC,MAAOb,KAAKC,MAAMa,mB,GARNX,IAAMC,WCoDbW,E,kDA9Cb,WAAYd,GAAQ,IAAD,8BACjB,cAAMA,IACDe,MAAQ,CACXvB,OAAQ,GACRqB,WAAY,IAEd,EAAKG,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBANP,E,qDASnB,WAAqB,IAAD,OACe,IAA7BlB,KAAKgB,MAAMvB,OAAO0B,QACpBlC,IAAYE,MAAK,SAACM,GAChB,EAAK2B,SAAS,CAAE3B,OAAQA,S,8BAK9B,SAAiB4B,GACfrB,KAAKoB,SAAS,CACZN,WAAYO,EAAGC,OAAOT,U,oBAI1B,WAAU,IAAD,OAEHU,EAAevB,KAAKgB,MAAMvB,OAAO+B,QAAO,SAACtB,GAC3C,OAAOA,EAAMP,KACV8B,cACAC,SAAS,EAAKV,MAAMF,WAAWW,kBAGpC,OACE,gCACE,qBAAK3B,UAAU,QAAQC,IAAK4B,IAE5B,cAAC,EAAD,CACEb,WAAYd,KAAKgB,MAAMF,WACvBF,eAAgBZ,KAAKiB,mBAGvB,cAAC,EAAD,CAAeX,WAAYiB,W,GAzCjBpB,IAAMC,WCHxBwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.91d309b7.chunk.js","sourcesContent":["const FetchData = () => {\n  return fetch(\n    \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\"\n  )\n    .then((response) => response.json())\n    .then((data) => {\n      const result = data.results.map((result) => {\n        return {\n          image: result.image,\n          name: `${result.name}`,\n          species: result.species,\n        };\n      });\n\n      return result;\n    });\n};\n\nexport default FetchData;\n","export default __webpack_public_path__ + \"static/media/Rick_Morty_logo.de13d484.png\";","import React from \"react\";\n\nclass CharacterCard extends React.Component {\n  render() {\n    return (\n      <div className=\"Filter\">\n        <div>\n          <img src={this.props.actor.image} />{\" \"}\n        </div>\n        <div> {this.props.actor.name} </div>\n        <div> {this.props.actor.species}</div>\n      </div>\n    );\n  }\n}\nexport default CharacterCard;\n","import React from \"react\";\nimport CharacterCard from \"./CharacterCard\";\n\nclass CharacterList extends React.Component {\n  render() {\n    return (\n      <div>\n        {this.props.characters.map(function (seriesResult, index) {\n          return <CharacterCard key={index} actor={seriesResult} />;\n        })}\n      </div>\n    );\n  }\n}\nexport default CharacterList;\n","import React from \"react\";\n\nclass Filters extends React.Component {\n  render() {\n    return (\n      <form>\n        <input\n          className=\"inputText\"\n          type=\"text\"\n          onChange={this.props.onFilterChange}\n          value={this.props.filterText}\n        />\n      </form>\n    );\n  }\n}\nexport default Filters;\n","import \"../stylesheets/App.css\";\nimport React from \"react\";\nimport FetchData from \"../services/Api\";\nimport logo from \"../images/Rick_Morty_logo.png\";\nimport CharacterList from \"./CharacterList\";\nimport Filters from \"./Filters\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: [],\n      filterText: \"\",\n    };\n    this.handleFilterText = this.handleFilterText.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.result.length === 0) {\n      FetchData().then((result) => {\n        this.setState({ result: result });\n      });\n    }\n  }\n\n  handleFilterText(ev) {\n    this.setState({\n      filterText: ev.target.value,\n    });\n  }\n\n  render() {\n    // crear constante con un array que venga de filtrar el estado \"this.state.result\"\n    let filterResult = this.state.result.filter((actor) => {\n      return actor.name\n        .toLowerCase()\n        .includes(this.state.filterText.toLowerCase());\n    });\n\n    return (\n      <div>\n        <img className=\"title\" src={logo} />\n\n        <Filters\n          filterText={this.state.filterText}\n          onFilterChange={this.handleFilterText}\n        />\n\n        <CharacterList characters={filterResult} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
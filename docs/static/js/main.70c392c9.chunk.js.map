{"version":3,"sources":["services/Api.js","services/localExport.js","images/Rick_Morty_logo.png","components/CharacterCard.js","components/CharacterList.js","components/Filters.js","components/CharacterDetail.js","components/App.js","index.js"],"names":["FetchData","fetch","then","response","json","data","results","map","character","id","image","name","species","status","origin","episode","length","localExport","getLocal","localSave","localStorage","getItem","JSON","parse","setLocal","value","setItem","stringify","CharacterCard","className","src","this","props","actor","alt","React","Component","CharacterList","characters","seriesResult","index","to","Filters","type","onChange","onFilterChange","filterText","CharacterDetail","console","log","find","match","params","logo","App","state","result","handleFilterText","bind","resultLocal","ls","setState","ev","target","filterResult","filter","toLowerCase","includes","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.70c392c9.chunk.js","sourcesContent":["const FetchData = () => {\n  return fetch(\n    \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\"\n  )\n    .then((response) => response.json())\n    .then((data) => {\n      const result = data.results.map((character) => {\n        return {\n          id: character.id,\n          image: character.image,\n          name: character.name,\n          species: character.species,\n          status: character.status,\n          origin: character.origin.name,\n          episode: character.episode.length,\n        };\n      });\n\n      return result;\n    });\n};\n\nexport default FetchData;\n","const getLocal = () => {\n  const localSave = localStorage.getItem(\"result\");\n\n  return JSON.parse(localSave);\n};\n\nconst setLocal = (value) => {\n  localStorage.setItem(\"result\", JSON.stringify(value));\n};\n\nconst localExport = {\n  getLocal: getLocal,\n  setLocal: setLocal,\n};\n\nexport default localExport;\n","export default __webpack_public_path__ + \"static/media/Rick_Morty_logo.de13d484.png\";","import React from \"react\";\n\nclass CharacterCard extends React.Component {\n  render() {\n    return (\n      <div className=\"cardBox\">\n        <div className=\"box\">\n          <div>\n            <img src={this.props.actor.image} alt=\"imagen\" />\n          </div>\n          <div className=\"lasName\">{this.props.actor.name}</div>\n          <div className=\"lasName\">{this.props.actor.species}</div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default CharacterCard;\n","import React from \"react\";\nimport CharacterCard from \"./CharacterCard\";\nimport { Link } from \"react-router-dom\";\n\nimport \"../stylesheets/CharacterList.css\";\n\nclass CharacterList extends React.Component {\n  render() {\n    return (\n      <div className=\"CardImages\">\n        {this.props.characters.map(function (seriesResult, index) {\n          return (\n            <Link key={index} to={`/character/${seriesResult.id}`}>\n              <CharacterCard actor={seriesResult} />;\n            </Link>\n          );\n        })}\n      </div>\n    );\n  }\n}\nexport default CharacterList;\n","import React from \"react\";\nimport \"../stylesheets/Filter.css\";\n\nclass Filters extends React.Component {\n  render() {\n    return (\n      <form>\n        <div className=\"inputTextBox\">\n          <input\n            className=\"inputText\"\n            type=\"text\"\n            onChange={this.props.onFilterChange}\n            value={this.props.filterText}\n          />\n        </div>\n      </form>\n    );\n  }\n}\nexport default Filters;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../images/Rick_Morty_logo.png\";\nimport \"../stylesheets/CharacterList.css\";\nclass CharacterDetail extends React.Component {\n  render() {\n    console.log(this.props);\n    const character = this.props.characters.find(\n      (character) => `${character.id}` === this.props.match.params.id\n    );\n\n    if (!character) {\n      return <div>Not found!</div>;\n    }\n\n    return (\n      <div className=\"cardBox\">\n        <div className=\"box\">\n          <img src={logo} className=\"images\" alt=\"imagen\" />\n          <Link to=\"/\">initial Home</Link>\n          <div className=\"card\">\n            <div>\n              <img src={character.image} alt=\"imagen\" />\n            </div>\n            <div>{character.name}</div>\n            <div>Status:{character.status}</div>\n            <div>Species:{character.species}</div>\n            <div>Origin:{character.origin.name}</div>\n            <div>Episode:{character.episode}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default CharacterDetail;\n","import \"../stylesheets/App.css\";\nimport React from \"react\";\nimport FetchData from \"../services/Api\";\nimport ls from \"../services/localExport\";\nimport logo from \"../images/Rick_Morty_logo.png\";\nimport CharacterList from \"./CharacterList\";\nimport Filters from \"./Filters\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport { Route, Switch } from \"react-router-dom\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: [],\n      filterText: \"\",\n    };\n    this.handleFilterText = this.handleFilterText.bind(this);\n  }\n\n  componentDidMount() {\n    const resultLocal = ls.getLocal();\n    if (resultLocal) {\n      this.setState({ result: resultLocal });\n    } else {\n      FetchData().then((result) => {\n        ls.setLocal(result);\n        this.setState({ result: result });\n      });\n    }\n  }\n\n  handleFilterText(ev) {\n    this.setState({\n      filterText: ev.target.value,\n    });\n  }\n\n  render() {\n    // crear constante con un array que venga de filtrar el estado \"this.state.result\"\n    let filterResult = this.state.result.filter((actor) => {\n      return actor.name\n        .toLowerCase()\n        .includes(this.state.filterText.toLowerCase());\n    });\n\n    return (\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <div className=\"title\">\n              <img src={logo} className=\"images\" alt=\"imagen\" />\n            </div>\n            <Filters\n              filterText={this.state.filterText}\n              onFilterChange={this.handleFilterText}\n            />\n            <CharacterList characters={filterResult} />\n          </Route>\n          <Route\n            exact\n            path=\"/character/:id\"\n            render={(props) => (\n              <CharacterDetail {...props} characters={this.state.result} />\n            )}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import App from \"./components/App\";\nimport { HashRouter } from \"react-router-dom\";\nimport React from \"react\"; //importar la librer√≠a de react\nimport ReactDOM from \"react-dom\"; //importar react-dom para que react genere el html\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}